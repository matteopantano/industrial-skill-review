{"text": "Process is defined as an ensemble of different skills and depicts an abstract description of steps in a workflow to reach a certain desired outcome. A simple example of a process could be bread backing in which we need first to gather and measure the ingredients, than mixing them together and finally pour them in a pan and place it in the oven. Definition of a process finds its roots in the definitions of the enterprise-control system integration like the one found in the well know ANSI/ISA95. However, it is important to denote that a process is solution neutral, therefore, a process to be executed depends on the type of resources involved and their capabilities. Such capabilities in our work are described as skills. For the sake of clarity, solution neutral means that a process is not parameterized upon the type of resource to be used but it could be executed and applied by different resources. For example, using the bread baking process described before, its description could be applied either if the process has to be done manually or via a robotic application.", "label": "Process", "metadata": {"shortLabel":"PR"}}
{"text": "Task is defined as a ordered ensemble of different skills and depicts a concrete representation of steps in a workflow to solve a specific goal by specifically interfacing with operators, control systems and programming. Therefore, it could be seen as a more specialized version of a process. For the sake of clarity, a Task can be a easily described as a sequence of skills that have been properly parameterized upon the resources involved and their capabilities. Taking the example of the bread baking outlined before the task could be pictured as follows. Gather ingredients from location X,Y,Z and measure X kg for ingredient 1, Y kg for ingredient 2. Mix the ingredients on the provided bowl at position X,Y,Z. Pour the mixed ingredients in a pan at position X,Y,Z and place the pan in the oven at position X,Y,Z.", "label": "Task", "metadata": {"shortLabel":"TS"}}
{"text": "Skill class is defined as a group name for a set of skills. This allows to group similar skills together in the form of a taxonomy. Such grouping has been used in order to structure a large variety of skills into meaningful groups that are understandable to the user (e.g. move, connect, compare, store, change). The Skill Class is not considered during execution, but it provides an overview for the user when searching for available skills.", "label": "Skill class", "metadata": {"shortLabel":"SKC"}}
{"text": "Skill is a predefined robot capability, that can be parameterized to solve a specific task. A skill can be either a physical action or a perception capability. Skills that execute physical actions are able to alter the world state. Examples are pick and place of an object. Skills with perception capabilities could update the state of a world model based on the made observations. Examples for perception capabilities can be to sense or measure a physical property such as the pose of an object. Referencing again the example of the bread baking, a skill could be the picking of one of the ingredients. ", "label": "Skill", "metadata": {"shortLabel":"SK"}}
{"text": "Primitive is the closest atomic unit to the hardware-level, they are intended as units that can perform a distinct operation and they can be depicted as building blocks for creating skills like opening a gripper. Similarly to skills, primitives can be parameterized to solve a precise task. Moreover, they can also provide output information in case the primitive supports it, for example location of an object when dealing with an object recognition primitive. Ideally, primitives can be divided in classes as in skills, however, in the scope of this work we limit the review to one sole class. If we take the example of the bread baking a primitive could be the grasping of the flour by actuating the end-effector (EE) within the pick skill.", "label": "Primitive", "metadata": {"shortLabel":"PR"}}

